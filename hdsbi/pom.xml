<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com</groupId>
	<artifactId>hdsbi</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>hdsbi</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<springboot.version>2.1.0.RELEASE</springboot.version>
		<kafka.version>0.10.2.1</kafka.version>
		<flink.version>1.8.0</flink.version>
		<scala.binary.version>2.11</scala.binary.version>
		<mybatis.version>2.0.0</mybatis.version>
		<commons.configuration.version>1.9</commons.configuration.version>
		<commons.lang.version>2.6</commons.lang.version>
		<druid.version>1.1.12</druid.version>
		<clickhouse.jdbc.version>0.1.52</clickhouse.jdbc.version>
		<alibaba.fastjson.version>1.2.83</alibaba.fastjson.version>
		<json.lib.version>2.3</json.lib.version>
		<kryo.version>4.0.0</kryo.version>
		<kryo.serializers.version>0.45</kryo.serializers.version>
	</properties>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>  
        <version>2.1.0.RELEASE</version>
        <relativePath/>
	</parent>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
		        <artifactId>spring-cloud-dependencies</artifactId>
		        <version>Finchley.SR1</version>
		        <type>pom</type>
		        <scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<!-- <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springboot.version}</version>
				<type>pom</type>
				<scope>import</scope>
				<exclusions>
					<exclusion>
						<groupId>org.apache.logging.log4j</groupId>
        				<artifactId>log4j-slf4j-impl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement> -->
	
	<build>
		<finalName>hdsbi</finalName>
		<!-- <sourceDirectory>src/main/java</sourceDirectory> -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.yml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<!-- <targetPath>${project.build.directory}/config</targetPath> -->
			</resource>
		</resources>
		<!-- <plugins>
		    <plugin>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-maven-plugin</artifactId>
		        <configuration>
		        	<fork>true</fork>
		        </configuration>
		        <executions>
					<execution>
						<goals>
						    <goal>repackage</goal>
						</goals>
	             	</execution>
	           </executions>
		    </plugin>
		</plugins> -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.hdsbi.HdsBiApplication</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<Class-Path>/</Class-Path>
						</manifestEntries>
					</archive>
					<classesDirectory>
					</classesDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- spring boot start -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
        			<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>log4j-slf4j-impl</artifactId>
            		<groupId>org.apache.logging.log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- spring boot end -->
		
		<!-- springcloud start -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
		</dependency>
		<!-- springcloud end -->
		
		<!-- lombok start -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<!-- 子项目引用无需下载 -->
			<!-- <optional>true</optional> -->
		</dependency>
		<!-- lombok end-->
		
		<!-- mybatis start-->
		<dependency>
		    <groupId>org.mybatis.spring.boot</groupId>
		    <artifactId>mybatis-spring-boot-starter</artifactId>
		    <version>${mybatis.version}</version>
		</dependency>
		<!-- mybatis end-->
		
		<!-- redis start -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>
		<!-- redis end -->
		
		<!-- commons-configuratio start -->
		<dependency>
		    <groupId>commons-configuration</groupId>
		    <artifactId>commons-configuration</artifactId>
		    <version>${commons.configuration.version}</version>
		</dependency>
		<!-- commons-configuratio end -->
		<!-- commons-lang start -->
		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		    <version>${commons.lang.version}</version>
		</dependency>
		<!-- commons-lang end -->
		
		<!-- druid start -->
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>druid</artifactId>
		    <version>${druid.version}</version>
		</dependency>
		<!-- druid end -->
		
		<!-- clickhouse jdbc start -->
		<dependency>
			<groupId>ru.yandex.clickhouse</groupId>
			<artifactId>clickhouse-jdbc</artifactId>
			<version>${clickhouse.jdbc.version}</version>
		</dependency>
		<!-- clickhouse jdbc end -->
		
		<!-- fastjson start -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${alibaba.fastjson.version}</version>
		</dependency>
		<!-- fastjson end -->
		<!-- json-lib start -->
		<dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>${json.lib.version}</version>
	        <classifier>jdk15</classifier>
		</dependency>
		<!-- json-lib end -->
		<!-- gson start -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
	    </dependency>
	    <!-- gson end -->
		
		<!-- kryo start -->	    
		<dependency>
		    <groupId>com.esotericsoftware</groupId>
		    <artifactId>kryo</artifactId>
		    <version>${kryo.version}</version>
		</dependency>
		<dependency>
		    <groupId>de.javakaffee</groupId>
		    <artifactId>kryo-serializers</artifactId>
		    <version>${kryo.serializers.version}</version>
		</dependency>
	    <!-- kryo end -->
	    
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
