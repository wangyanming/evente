<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hds.hdyapp.mapper.QueryByCKMapper">
	<select id="getTotalData" resultType="java.util.LinkedHashMap">
		select
			a.uv uv, b.orderAmount orderAmount, b.orderUser orderUser, b.orderCnt orderCnt, b.productCnt productCnt, c.ticketCnt ticketCnt, c.goodsCnt goodsCnt, b.orderUser/if(a.uv=0,1,a.uv) successConvertRate
		from
			(
			select count(distinct_id) pv, uniq(distinct_id) uv, org_id
				from evente.em_events
			where
				org_id = ${orgId} and toDate(time) between '${startDate}' and '${endDate}'
				<if test ="productId != null and -1 != productId">
					and event = 'ViewProduct' and product_id = ${productId} and product_type = '${productType}'
				</if>
				<if test ="productId == null or -1 == productId">
					and event = 'PageView' 
				</if>
			group by org_id ) a
		left join (
			select sum(product_sub_price + freight_money) orderAmount, uniq(distinct_id) orderUser, uniq(increment_id) orderCnt, sum(product_number) productCnt, org_id
				from evente.em_events
			where
				event = 'PaidOrder' and org_id = ${orgId} 
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test ="productId != null and -1 != productId">
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
			group by org_id ) b 
		on a.org_id = b.org_id
		left join (
			SELECT org_id,MAX(IF(product_type='event',cnt,0)) ticketCnt,MAX(IF(product_type='goods',cnt,0)) goodsCnt FROM
				(select
					org_id,product_type,SUM(product_number) cnt
				from
					evente.em_events
				where
					event = 'PaidOrder' and org_id = ${orgId} 
					and toDate(time) between '${startDate}' and '${endDate}'
					<if test ="productId != null and -1 != productId">
						and product_id = ${productId} and product_type = '${productType}' 
					</if>
					<if test ="productId == null or -1 == productId">
						and product_type in ('event', 'goods')
					</if>
				group by org_id,product_type)
				GROUP by org_id) c
		on a.org_id = c.org_id
	</select>
	
	<select id="getTotalDataByDay" resultType="java.util.LinkedHashMap">
		select
			a.date date, a.uv uv, ifNull(b.orderAmount,0) orderAmount, ifNull(b.orderUser,0) orderUser, ifNull(b.orderCnt,0) orderCnt, ifNull(b.productCnt,0) productCnt
		from
			(
			select 
				<if test="searchType == 'day'">
					formatDateTime(time, '%Y/%m/%d') date,
				</if>
				<if test="searchType == 'week'">
					concat(formatDateTime(time,'%Y'),'年第',toString(toISOWeek(time)),'周') date,
				</if>
				<if test="searchType == 'month'">
					concat(formatDateTime(time,'%Y'),'年',formatDateTime(time,'%m'),'月') date,
				</if>
				<if test="searchType == 'year'">
					concat(formatDateTime(time,'%Y'), '年') date,
				</if>
				count(distinct_id) pv, uniq(distinct_id) uv
				from evente.em_events
			where
				org_id = ${orgId} and event = 'PageView'
				and toDate(time) between '${startDate}' and '${endDate}'
			group by date ) a
		left join (
			select 
				<if test="searchType == 'day'">
					concat(formatDateTime(time, '%F'), ' 00:00:00') date,
				</if>
				<if test="searchType == 'week'">
					concat(formatDateTime(toMonday(time), '%F'), ' 00:00:00') date,
				</if>
				<if test="searchType == 'month'">
					concat(formatDateTime(time,'%Y-%m'), '-01 00:00:00') date,
				</if>
				<if test="searchType == 'year'">
					concat(formatDateTime(time,'%Y'), '-01-01 00:00:00') date,
				</if>
				sum(product_sub_price + freight_money) orderAmount, uniq(distinct_id) orderUser, uniq(increment_id) orderCnt, sum(product_number) productCnt
				from evente.em_events
			where
				event = 'PaidOrder' and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			group by date ) b 
		on a.date = b.date
		order by date desc
	</select>
	
	<select id="getBestSellingByDay" resultType="java.util.LinkedHashMap">
		select a.product_id productId, b.uv uv, a.orderAmount orderAmount, a.productCnt productCnt from
			(select
				product_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt
			from
				evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				and product_id != 0
			group by product_id) a
		left join
			(select uniq(distinct_id) uv, product_id
				from evente.em_events
			where
				org_id = ${orgId} and toDate(time) between '${startDate}' and '${endDate}'
				and event = 'ViewProduct' 
				and product_id != 0
			group by product_id) b
		on a.product_id = b.product_id
		<if test="sortType == 1">
			ORDER BY orderAmount desc
		</if>
		<if test="sortType == 2">
			ORDER BY productCnt desc
		</if>
		<if test="size == 1">
			limit 5
		</if>
	</select>
	
	<select id="getChannelDataByDay" resultType="java.util.LinkedHashMap">
		SELECT c.channel_id channel_id, c.uv uv, d.orderAmount orderAmount, d.productCnt productCnt, d.orderCnt orderCnt, d.orderUser orderUser,
			c.uv / if(a.uv=0,1,a.uv) uvRate,
			d.orderAmount / (case WHEN b.orderAmount=0 then 1 else b.orderAmount end) orderAmountRate,
			d.productCnt / if(b.productCnt=0,1,b.productCnt) productCntRate,
			d.orderCnt / if(b.orderCnt=0,1,b.orderCnt) orderCntRate,
			d.orderUser / if(b.orderUser=0,1,b.orderUser) orderUserRate FROM
		(
			SELECT uniq(distinct_id) uv, org_id
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' 
				and	event = 'PageView'
			GROUP BY org_id) a
		LEFT JOIN
		(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			GROUP BY org_id) b
		on a.org_id = b.org_id
		LEFT JOIN
		(
			SELECT channel_id, org_id, uniq(distinct_id) uv 
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test="null != productId">
					and event = 'ViewProduct' 
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
				<if test="null == productId">
					and event = 'PageView'
				</if>
				<if test="null != channelId">
					and channel_id = '${channelId}'
				</if>
				and channel_id != ''
			GROUP BY channel_id,org_id) c
		on a.org_id = c.org_id
		LEFT JOIN
		(
			select
				channel_id, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test="null != productId">
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
				<if test="null != channelId">
					and channel_id = '${channelId}'
				</if>
				and channel_id != ''
			GROUP BY channel_id,org_id) d
		on c.channel_id=d.channel_id
	</select>
	
	<select id="getDeviceDataByDay" resultType="java.util.LinkedHashMap">
		SELECT c.device_type client_id, c.uv uv, d.orderAmount orderAmount, d.productCnt productCnt, d.orderCnt orderCnt, d.orderUser orderUser,
			c.uv / if(a.uv=0,1,a.uv) uvRate,
			d.orderAmount / (case WHEN b.orderAmount=0 then 1 else b.orderAmount end) orderAmountRate,
			d.productCnt / if(b.productCnt=0,1,b.productCnt) productCntRate,
			d.orderCnt / if(b.orderCnt=0,1,b.orderCnt) orderCntRate,
			d.orderUser / if(b.orderUser=0,1,b.orderUser) orderUserRate FROM
		(
			SELECT uniq(distinct_id) uv, org_id
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and	event = 'PageView'
				and toDate(time) between '${startDate}' and '${endDate}' 
			GROUP BY org_id) a
		LEFT JOIN
		(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			GROUP BY org_id) b
		on a.org_id = b.org_id
		LEFT JOIN
		(
			SELECT device_type, org_id, uniq(distinct_id) uv 
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test="null != productId">
					and event = 'ViewProduct' 
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
				<if test="null == productId">
					and event = 'PageView'
				</if>
				<if test="null != deviceType">
					and device_type = ${deviceType}
				</if>
				and device_type != 0
			GROUP BY device_type,org_id) c
		on a.org_id = c.org_id
		LEFT JOIN
		(
			select
				device_type, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test="null != productId">
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
				<if test="null != deviceType">
					and device_type = ${deviceType}
				</if>
				and device_type != 0
			GROUP BY device_type,org_id) d
		on c.device_type=d.device_type
	</select>
	
	<select id="getRegionDataByDay" resultType="java.util.LinkedHashMap">
		SELECT c._province regionId, c.uv uv, d.orderAmount orderAmount, d.productCnt productCnt, d.orderCnt orderCnt, d.orderUser orderUser,
			c.uv / if(a.uv=0,1,a.uv) uvRate,
			d.orderAmount / (case WHEN b.orderAmount=0 then 1 else b.orderAmount end) orderAmountRate,
			d.productCnt / if(b.productCnt=0,1,b.productCnt) productCntRate,
			d.orderCnt / if(b.orderCnt=0,1,b.orderCnt) orderCntRate,
			d.orderUser / if(b.orderUser=0,1,b.orderUser) orderUserRate FROM
		(
			SELECT uniq(distinct_id) uv, org_id
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' 
				<if test ="productId != null and -1 != productId">
					and event = 'ViewProduct' and product_id = ${productId} and product_type = '${productType}'
				</if>
				<if test ="productId == null or -1 == productId">
					and event = 'PageView' 
				</if>
			GROUP BY org_id) a
		LEFT JOIN
		(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test ="productId != null and -1 != productId">
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
			GROUP BY org_id) b
		on a.org_id = b.org_id
		LEFT JOIN
		(
			SELECT _province, org_id, uniq(distinct_id) uv 
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test="null != productId">
					and event = 'ViewProduct' 
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
				<if test="null == productId">
					and event = 'PageView'
				</if>
				<if test="null != regionId">
					and _province = '${regionId}'
				</if>
				and _province != ''
			GROUP BY _province,org_id) c
		on a.org_id = c.org_id
		LEFT JOIN
		(
			select
				_province, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				<if test="null != productId">
					and product_id = ${productId} and product_type = '${productType}' 
				</if>
				<if test="null != regionId">
					and _province = '${regionId}'
				</if>
				and _province != ''
			GROUP BY _province,org_id) d
		on c._province=d._province
	</select>
	
	<select id="getPayWayDataByDay" resultType="java.util.LinkedHashMap">
		SELECT b.pay_way pay_way, b.orderAmount orderAmount, b.productCnt productCnt, b.orderCnt orderCnt, b.orderUser orderUser,
			b.orderAmount / (case WHEN a.orderAmount=0 then 1 else a.orderAmount end) orderAmountRate,
			b.productCnt / if(a.productCnt=0,1,a.productCnt) productCntRate,
			b.orderCnt / if(a.orderCnt=0,1,a.orderCnt) orderCntRate,
			b.orderUser / if(a.orderUser=0,1,a.orderUser) orderUserRate FROM
			(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			GROUP BY org_id) a
		LEFT JOIN
			(select
				pay_way, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
			from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
				and pay_way != ''
			GROUP BY pay_way,org_id) b
		on a.org_id = b.org_id
	</select>
	
	<select id="getDataByChannelId" resultType="java.util.LinkedHashMap">
		SELECT c.product_id productId, c.uv uv, d.orderAmount orderAmount, d.productCnt productCnt, d.orderCnt orderCnt, d.orderUser orderUser,
			c.uv / if(a.uv=0,1,a.uv) uvRate,
			d.orderAmount / (case WHEN b.orderAmount=0 then 1 else b.orderAmount end) orderAmountRate,
			d.productCnt / if(b.productCnt=0,1,b.productCnt) productCntRate,
			d.orderCnt / if(b.orderCnt=0,1,b.orderCnt) orderCntRate,
			d.orderUser / if(b.orderUser=0,1,b.orderUser) orderUserRate FROM
		(
			SELECT org_id, product_id, uniq(distinct_id) uv 
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' and channel_id = '${channelId}'
				and event = 'ViewProduct' 
				and product_type = 'event'
			GROUP BY org_id, product_id) c
		LEFT JOIN
		(
			select
				product_id, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' and channel_id = '${channelId}'
				and product_type = 'event' 
			GROUP BY product_id,org_id) d
		on c.product_id = d.product_id
		LEFT JOIN
		(
			SELECT uniq(distinct_id) uv, org_id
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' 
				and	event = 'PageView'
			GROUP BY org_id) a
		on c.org_id = a.org_id
		LEFT JOIN
		(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			GROUP BY org_id) b
		on c.org_id = b.org_id
		ORDER BY orderAmount DESC
	</select>
	
	<select id="getDataByRegionId" resultType="java.util.LinkedHashMap">
		SELECT c.product_id productId, c.uv uv, d.orderAmount orderAmount, d.productCnt productCnt, d.orderCnt orderCnt, d.orderUser orderUser,
			c.uv / if(a.uv=0,1,a.uv) uvRate,
			d.orderAmount / (case WHEN b.orderAmount=0 then 1 else b.orderAmount end) orderAmountRate,
			d.productCnt / if(b.productCnt=0,1,b.productCnt) productCntRate,
			d.orderCnt / if(b.orderCnt=0,1,b.orderCnt) orderCntRate,
			d.orderUser / if(b.orderUser=0,1,b.orderUser) orderUserRate FROM
		(
			SELECT org_id, product_id, uniq(distinct_id) uv 
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' and _province = '${regionId}'
				and event = 'ViewProduct' 
				and product_type = 'event'
			GROUP BY org_id, product_id) c
		LEFT JOIN
		(
			select
				product_id, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' and _province = '${regionId}'
				and product_type = 'event' 
			GROUP BY product_id,org_id) d
		on c.product_id = d.product_id
		LEFT JOIN	
		(
			SELECT uniq(distinct_id) uv, org_id
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' 
				and	event = 'PageView'
			GROUP BY org_id) a
		on c.org_id = a.org_id
		LEFT JOIN
		(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			GROUP BY org_id) b
		on c.org_id = b.org_id
		ORDER BY orderAmount DESC
	</select>
	
	<select id="getDataByDeviceType" resultType="java.util.LinkedHashMap">
		SELECT c.product_id productId, c.uv uv, d.orderAmount orderAmount, d.productCnt productCnt, d.orderCnt orderCnt, d.orderUser orderUser,
			c.uv / if(a.uv=0,1,a.uv) uvRate,
			d.orderAmount / (case WHEN b.orderAmount=0 then 1 else b.orderAmount end) orderAmountRate,
			d.productCnt / if(b.productCnt=0,1,b.productCnt) productCntRate,
			d.orderCnt / if(b.orderCnt=0,1,b.orderCnt) orderCntRate,
			d.orderUser / if(b.orderUser=0,1,b.orderUser) orderUserRate FROM
		(
			SELECT org_id, product_id, uniq(distinct_id) uv 
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' and device_type = ${clientId}
				and event = 'ViewProduct' 
				and product_type = 'event'
			GROUP BY org_id, product_id) c
		LEFT JOIN
		(
			select
				product_id, org_id,
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' and device_type = ${clientId}
				and product_type = 'event' 
			GROUP BY product_id,org_id) d
		on c.product_id = d.product_id
		LEFT JOIN
		(
			SELECT uniq(distinct_id) uv, org_id
				FROM evente.em_events
			WHERE 
				org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}' 
				and	event = 'PageView'
			GROUP BY org_id) a
		on c.org_id = a.org_id
		LEFT JOIN
		(
			select
				sum(product_sub_price + freight_money) orderAmount,
				sum(product_number) productCnt,
				uniq(increment_id) orderCnt,
				uniq(distinct_id) orderUser,
				org_id
				from evente.em_events
			where
				event = 'PaidOrder'
				and org_id = ${orgId}
				and toDate(time) between '${startDate}' and '${endDate}'
			GROUP BY org_id) b
		on c.org_id = b.org_id
		ORDER BY orderAmount DESC
	</select>
</mapper>